#ifndef ZAK_KEMBLE_CONFIG_433_H_
#define ZAK_KEMBLE_CONFIG_433_H_

#include <stdint.h>

namespace ZakKembleConfig433
{
	static constexpr uint8_t ChannelCount = 10;

	static constexpr uint8_t Config[] = {
		0x07, 0x02, 0x01, 0x00, 0x01, 0xC9, 0xC3, 0x80,
		0x08, 0x13, 0x41, 0x41, 0x21, 0x20, 0x67, 0x4B, 0x00,
		0x08, 0x11, 0x00, 0x04, 0x00, 0x52, 0x00, 0x18, 0x30,
		0x10, 0x11, 0x20, 0x0C, 0x00, 0x03, 0x00, 0x07, 0x02, 0x71, 0x00, 0x05, 0xC9, 0xC3, 0x80, 0x00, 0x00,
		0x05, 0x11, 0x20, 0x01, 0x0C, 0x46,
		0x10, 0x11, 0x20, 0x0C, 0x1C, 0x80, 0x00, 0xB0, 0x10, 0x0C, 0xE8, 0x00, 0x4E, 0x06, 0x8D, 0xB9, 0x00,
		0x0E, 0x11, 0x20, 0x0A, 0x28, 0x00, 0x02, 0xC0, 0x08, 0x00, 0x12, 0xC6, 0xD4, 0x01, 0x5C,
		0x0F, 0x11, 0x20, 0x0B, 0x39, 0x11, 0x11, 0x80, 0x1A, 0x20, 0x00, 0x00, 0x28, 0x0C, 0xA4, 0x23,
		0x0D, 0x11, 0x20, 0x09, 0x45, 0x03, 0x00, 0x85, 0x01, 0x00, 0xFF, 0x06, 0x09, 0x10,
		0x06, 0x11, 0x20, 0x02, 0x50, 0x94, 0x0A,
		0x06, 0x11, 0x20, 0x02, 0x54, 0x03, 0x07,
		0x09, 0x11, 0x20, 0x05, 0x5B, 0x40, 0x04, 0x04, 0x78, 0x20,
		0x10, 0x11, 0x21, 0x0C, 0x00, 0x7E, 0x64, 0x1B, 0xBA, 0x58, 0x0B, 0xDD, 0xCE, 0xD6, 0xE6, 0xF6, 0x00,
		0x10, 0x11, 0x21, 0x0C, 0x0C, 0x03, 0x03, 0x15, 0xF0, 0x3F, 0x00, 0x7E, 0x64, 0x1B, 0xBA, 0x58, 0x0B,
		0x0F, 0x11, 0x21, 0x0B, 0x18, 0xDD, 0xCE, 0xD6, 0xE6, 0xF6, 0x00, 0x03, 0x03, 0x15, 0xF0, 0x3F,
		0x05, 0x11, 0x22, 0x01, 0x03, 0x1D,
		0x0C, 0x11, 0x40, 0x08, 0x00, 0x37, 0x09, 0x00, 0x00, 0x44, 0x44, 0x20, 0xFE,
		0x08, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x05, 0x17, 0x56, 0x10, 0xCA, 0xF0,
		0x05, 0x17, 0x13, 0x10, 0xCA, 0xF0,
		0x08, 0x11, 0x01, 0x04, 0x00, 0x07, 0x18, 0x00, 0x00,
		0x07, 0x11, 0x02, 0x03, 0x00, 0x0A, 0x09, 0x00,
		0x05, 0x11, 0x10, 0x01, 0x04, 0x31,
		0x08, 0x11, 0x11, 0x04, 0x01, 0xB4, 0x2B, 0x00, 0x00,
		0x0E, 0x11, 0x12, 0x0A, 0x00, 0x04, 0x01, 0x08, 0xFF, 0xFF, 0x20, 0x00, 0x00, 0x2A, 0x01,
		0x0B, 0x11, 0x12, 0x07, 0x0E, 0x01, 0x06, 0xAA, 0x00, 0x80, 0x02, 0x2A,
		0x0E, 0x11, 0x20, 0x0A, 0x03, 0x1E, 0x84, 0x80, 0x09, 0xC9, 0xC3, 0x80, 0x00, 0x0D, 0xA7,
		0x0F, 0x11, 0x20, 0x0B, 0x1E, 0x10, 0x20, 0x00, 0xE8, 0x00, 0x4B, 0x06, 0xD3, 0xA0, 0x06, 0xD4,
		0x0D, 0x11, 0x20, 0x09, 0x2A, 0x00, 0x00, 0x00, 0x23, 0xC6, 0xD4, 0x00, 0xA9, 0xE0,
		0x09, 0x11, 0x20, 0x05, 0x39, 0x10, 0x10, 0x80, 0x1A, 0x40,
		0x0C, 0x11, 0x20, 0x08, 0x46, 0x01, 0x15, 0x02, 0x00, 0x80, 0x06, 0x02, 0x18,
		0x05, 0x11, 0x20, 0x01, 0x50, 0x84,
		0x05, 0x11, 0x20, 0x01, 0x54, 0x04,
		0x05, 0x11, 0x20, 0x01, 0x5D, 0x08,
		0x10, 0x11, 0x21, 0x0C, 0x00, 0xA2, 0x81, 0x26, 0xAF, 0x3F, 0xEE, 0xC8, 0xC7, 0xDB, 0xF2, 0x02, 0x08,
		0x10, 0x11, 0x21, 0x0C, 0x0C, 0x07, 0x03, 0x15, 0xFC, 0x0F, 0x00, 0xA2, 0x81, 0x26, 0xAF, 0x3F, 0xEE,
		0x0F, 0x11, 0x21, 0x0B, 0x18, 0xC8, 0xC7, 0xDB, 0xF2, 0x02, 0x08, 0x07, 0x03, 0x15, 0xFC, 0x0F,
		0x0A, 0x11, 0x23, 0x06, 0x00, 0x34, 0x04, 0x0B, 0x04, 0x07, 0x70,
		0x08, 0x11, 0x40, 0x04, 0x00, 0x38, 0x0D, 0xDD, 0xDD
	};

	static constexpr size_t ConfigSize = sizeof(Config);
};
#endif